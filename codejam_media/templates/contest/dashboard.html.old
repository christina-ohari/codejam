{% extends "base_lgcj.html" %}
{% load i18n %}
{% load staticfiles %}

{% block head_scripts %}
<script type="text/javascript" src="{% static "third_party/json2.js" %}"></script>
<script type="text/javascript" src="{% static "third_party/cycle.js" %}"></script>
<script type="text/javascript" src="{% static "third_party/json_parse.js" %}"></script>
<script type="text/javascript" src="{% static "third_party/json_parse_state.js" %}"></script>
<style>
textarea:disabled {
  background-color: lightgray;
}
</style>
{% endblock %}

{% block content %}
<h3 id="dsb-problem-title-area">
  <span id="dsb-problem-desc-div" class="problem-title after-start-only" style="display: block;">
    <span style="color:#666">
      <ul>
        <li>경연 방식:
          <ul>
            <li>문제(PDF 파일)을 다운로드 하여 구현한다.</li>
            <li>입력 파일을 다운로드 받아 실행한다.</li> 
            <li>결과를 사이트에 업로드하고 pass 여부를 확인한다.</li> 
            <li>Pass 확인 후 <span style="color:red">바로(5분 이내) 소스 코드를 lge-codejam@lge.com으로 제출</span>한다.</li> 
            <li>메일 제목에, 이름, 소속, 문제 번호를 같이 적어 보내주세요.
              <ul><li>Ex) <span style="color:blue">홍길동_MC_Problem1_Source</span></li></ul>
            </li>
            <li>구현 언어는 제한 없습니다.</li>
          </ul>
        </li>
      </ul>

      <ul>
        <li>Competition Rules:
          <ul>
            <li>Download problem (PDF file) then solve it.</li>
            <li>Download inout file and execute it using your code.</li>
            <li>Upload your result and check whether it is passed.</li>  
            <li>Check for pass/fail, and then <span style="color:red">within 5 minutes send source code to lge-codejam@lge.com</span></li>
            <li>Include your name, department and problem number when writing email subject
              <ul><li>ex) <span style="color:blue">BradPit_LGSI_Problem1_Source</span></li></ul>
             </li>
            <li>Any program language or languages are allowed</li>
          </ul>
        </li>
      </ul>
    </span>
  </span>
</h3>

<hr/>

<!-- Problem Title -->
<h3 id="dsb-problem-title-area">
  <span id="dsb-problem-title-div" class="problem-title after-start-only" style="display: block;">
    <span style="color:#666">Problem {{problem.deco}}. </span> {{problem.name}}
  </span>
</h3>

<div id="dsb-problem-pages">
  {% include "problem/list.html" %}
</div>

<div id="dsb-clarification-page" class="dsb-content-pages">
  <!-- The clarifications table -->
  <div id="clarTableDiv" class="clarTableWrapper"></div><div>
    <table id="dsb-clarification-table">
      <colgroup span="9">
        <col width="16%" /><col width="2%" />
        <col width="10%" /><col width="2%" />
        <col width="28%" /><col width="2%" />
        <col width="10%" /><col width="2%" />
        <col width="28%" />
      </colgroup>
      <thead>
        <tr>
        <th>Category</th><th>&nbsp;</th>
        <th class="clarTimeColumn">Asked</th><th>&nbsp;</th>
        <th>Question</th><th>&nbsp;</th>
        <th class="clarTimeColumn">Answered</th><th>&nbsp;</th>
        <th>Answer</th>
        </tr>
      </thead>
      <tbody id="dsb-clarification-tbody">
      </tbody>
    </table>
  </div>
  <div id="dsb-submit-clarification">
    <!-- The link to ask a clarification -->
    <div style="padding: 0.5em 0 0.3em 0;">
      <b>Ask a question:</b>
    </div>
    <!-- The form for asking clarification -->
    <div>
      <form onsubmit="return GCJ.submitClarification(this);"><div style="display:none;"><input type="hidden" name="csrfmiddlewaretoken" value="NWU5NDA3OTUyOTQ2YmM0NzZhOTk0NDAwN2ZkMmI3Yzh8fDEzNjcxOTM3NDg3NDY2NzE=" /></div>
        <div><textarea rows="5" cols="60" name="q"></textarea></div>
        <div style="padding-top: 0.3em">
          <select id="dsb-clarification-problem-select" name="problem">
            <option value="_" selected>[General]</option>
          </select>
          &nbsp;
          <input id="dsb-submit-clarification-button" type="submit"
                 value="Ask" />
        </div>
      </form>
    </div>
  </div>
  <!-- Too many pending clarifications -->
  <div id="dsb-cannot-ask-question-text"
    style="font-weight: bold; padding: 0.5em 0 0.3em 0">
    
    There is a maximum of 8 pending questions.
    You can ask more questions as soon as we have responded to some of your
    questions.
    
  </div>

</div>

<div id="dsb-submissions-page" class="dsb-content-pages">
  <div id="dsb-submissions-status" class="dsb-sub-status-msg">
    You have 0 submissions.
  </div>
  <table id="dsb-submissions-table" class="dsb-sub-main-table"
         style="display:none">
  <thead>
    <tr id="dsb-sub-main-table-header">
      <th class="dsb-sub-row-id-width">ID</th>
      <th class="dsb-sub-name-width">Problem</th>
      <th class="dsb-sub-difficulty-width">Size</th>
      <th class="dsb-sub-input-width">Input</th>
      <th class="dsb-sub-output-width">Output</th>
      <th class="dsb-sub-source-width">Solution</th>
      <th class="dsb-sub-status-width">Status</th>
      <th class="dsb-sub-time-width">Time</th>
    </tr>
  </thead>
  <tbody id="dsb-submissions-rows">
  </tbody>
  </table>
</div>
{% endblock %}



{% block body_scripts %}
<script>

var timerList = {};

function Timer(index) {

  var index = index
    , node = document.getElementById('io_timer_' + index)
    , timer = false
    , interval = 5 * 60;
    
  node.style.fontSize = '2.5em';

  function loop() {
    var min, sec;

    --interval;
    
    if (interval < 2*60) {
      node.style.color = 'red';
    }

    if (interval === 0) {
      stop();
      node.innerHTML = '{% trans "<br>입력 파일이 변경되었습니다.<br>다시 다운로드 받으세요." %}';
      node.parentNode.style.display = 'inline';
    } else {
      min = Math.floor(interval / 60);
      sec = interval % 60;
      node.innerHTML = '&nbsp;&nbsp;&nbsp;' + min + ':' + (sec < 10 ? '0' : '') + sec;
    }
    
  }
  
  function start() {
    if (timer) {
      stop();
    }
    node.style.color = 'green';
    node.parentNode.style.display = 'inline';
    node.innerHTML = '&nbsp;&nbsp;&nbsp;' + '5:00';
    document.getElementById('output-fileio_timer_' + index).disabled = false;
    document.getElementById('submit-buttonio_timer_' + index).disabled = false;
    timer = setInterval(loop, 1000);
  }
  
  function stop() {
    if (timer) {
      timerList[index] = false;
      clearInterval(timer);
      
      node.innerHTML = '';
      node.parentNode.style.display = 'none';
      document.getElementById('output-fileio_timer_' + index).disabled = true;
      document.getElementById('submit-buttonio_timer_' + index).disabled = true;
      $('#submit-formio_timer_' + index + ' input[name=input]')[0].value = null;
    }
  }
  
  this.start = start;
  this.stop = stop;
}


if (!document.getElementsByClassName) {
	document.getElementsByClassName = function (token) {
		return $('.' + token);
	};
}



function initSolveButtons() {
  var keyword = 'dsb-input-start-button'
    , nodes = document.getElementsByClassName(keyword)
    , node, i, len, tmp;

  // show input/output data box
  function show() {
    var suffix = this.id.slice(keyword.length);

    document.getElementById('dsb-input-start-button' + suffix).style.display = 'none';
    document.getElementById('dsb-input-link-plain' + suffix).style.display = 'inline';
    document.getElementById('dsb-action-box-wrap' + suffix).className = 'dsb-action-box-open';
    document.getElementById('dsb-input-table-caption' + suffix).style.display = 'inline';
    //document.getElementById('dsb-resubmit-caption' + suffix).style.display = 'inline';
    document.getElementById('dsb-submit-form-div' + suffix).style.display = 'block';
  }
  
  // download input data
  function download() {
    var keyword = 'dsb-input-link-plain-text'
      , suffix  = this.id.slice(keyword.length)
      , index   = Number(suffix.slice(0,1)) * 2 + Number(suffix.slice(2))
      , formId  = 'submit-formio_timer_' + index
      , inputId = $('#'+formId + ' input[name=input]')[0].value;
      
    function doDownload() {
      var name = String.fromCharCode(65 + Math.floor(index/2)) + '-' + (index%2 == 0 ? 'small' : 'large') + '.in'
        , timer = timerList[index];

      document.location = '/codejam/problem/download/input/' + inputId + '/' + name;
      
      if (!timer) {
        timer = new Timer(index);
        timer.start();
        timerList[index] = timer;
      }
    }
    
    // get id to download input data
    function doGetInputId() {
      var xhr = new XMLHttpRequest();

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            inputId = xhr.responseText;
            $('#'+formId + ' input[name=input]')[0].value = inputId;
            doDownload();
          } else {
            alert('error');
          }
        }
      };
      xhr.open('POST', '/codejam/problem/get/input/id');
      xhr.send($('#'+formId).serialize());
    }
      
    if (inputId) {
      doDownload(inputId);
    } else {
      doGetInputId();
    }
  }
  
  // submit output
  function submit() {
    var keyword = 'submit-buttonio_timer_'
      , index = Number(this.id.slice(keyword.length))
      , suffix = Math.floor(index / 2) + '-' + (index % 2)
      , xhr = new XMLHttpRequest();
      
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            json = JSON.parse(xhr.responseText);
            if (json.ok) {
              timerList[index].stop();
              alert('success');
            } else {
              alert(json.error);
            }
          } else {
            alert('bad request. please refresh page.');
          }
        }
      };
      xhr.open('POST', '/codejam/problem/answer');
      xhr.send($('#submit-formio_timer_' + index).serialize());
  }

  // hide input/output data box
  function hide() {
    var keyword = 'dsb-hide-submissionio_timer_'
      , index = Number(this.id.slice(keyword.length))
      , suffix = Math.floor(index / 2) + '-' + (index % 2);
  
    document.getElementById('dsb-input-start-button' + suffix).style.display = 'inline';
    document.getElementById('dsb-input-link-plain' + suffix).style.display = 'none';
    document.getElementById('dsb-action-box-wrap' + suffix).className = '';
    document.getElementById('dsb-input-table-caption' + suffix).style.display = 'none';
    //document.getElementById('dsb-resubmit-caption' + suffix).style.display = 'none';
    document.getElementById('dsb-submit-form-div' + suffix).style.display = 'none';
  }
  
  
  
  // intinialize interactions
  for (i = 0, len = nodes.length; i < len; ++i) {
    node = nodes[i];
    node.onclick = show;

    tmp = node.id.slice(keyword.length);
    document.getElementById('dsb-input-link-plain-text' + tmp).onclick = download;
    console.log(document.getElementById('dsb-input-link-plain-text' + tmp).onclick);
    
    tmp = Number(tmp.slice(0,1)) * 2 + Number(tmp.slice(2));
    document.getElementById('io_timer_' + tmp).innerHTML = '';
    document.getElementById('submit-buttonio_timer_' + tmp).onclick = submit;
    document.getElementById('submit-buttonio_timer_' + tmp).disabled = true;
    document.getElementById('output-fileio_timer_' + tmp).disabled = true;
    document.getElementById('dsb-hide-submissionio_timer_' + tmp).onclick = hide;
  }
}



function selectProblem(index, title) {
  var nodes, noed, i, len, tag;
  
  // side menu
  nodes  = document.getElementsByClassName('dsb-problem-tab-open');
  for (i=0, len = nodes.length; i < len; ++i) {
    nodes[i].className = 'dsb-problem-tab-close';
  }
  node = document.getElementById('dsb-problem-tab' + index);
  node.className = 'dsb-problem-tab-open';
  
  // main title
  name = node.textContent;
  name = name.slice(name.indexOf('.') + 2);
  tag = '<span style="color:#666">Problem ' + String.fromCharCode(65+index) + '.</span>&nbsp' + name;
  document.getElementById('dsb-problem-title-div').innerHTML = tag;
  
  // main content block
  nodes = document.getElementsByClassName('dsb-content-pages');
  for (i=0, len = nodes.length; i < len; ++i) {
    nodes[i].style.display = 'none';
  }
  document.getElementById('dsb-problem-page' + index).style.display = 'block';
}



function initSelector() {
  var nodes = document.getElementsByClassName('dynamic-link')
    ,node, id, keyword = 'dsb-problem-title';

  for (var i = 0, len = nodes.length; i < len; ++i) {
    node = nodes[i];
    id = node.id;

    if (id && id.slice(0, keyword.length) === keyword) {
      node.onclick = function () {
        selectProblem(Number(this.id.slice(keyword.length)));
      };
    }
  }
}



window.onload = function () {

  var match = window.location.href.match(/#([^?]+&|)p=([^?#&=]+)/)
    , index = 0;
  
  initSelector();
  initSolveButtons();

  if (match && match.length > 2) {
    index = Number(match[2]);
  }
  
	selectProblem(index);
};
</script>
{% endblock %}
